@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Yeni Yazar Ekleme</h1>
<br />
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post))
{
<div class="form-group">
    @Html.Label("Yazar Adı")
    @Html.TextAreaFor(x => x.WriterName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterName)
    <br />
    @Html.Label("Yazar Soyadı")
    @Html.TextAreaFor(x => x.Writersurname, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Writersurname)
    <br />
    @Html.Label("Yazar Mail")
    @Html.TextAreaFor(x => x.WriterMail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterMail)
    <br />
    @Html.Label("Yazar Şifresi")
    @Html.TextAreaFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br />
    @Html.Label("Yazar Görsel Linki")
    @Html.TextAreaFor(x => x.WritersImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WritersImage)
    <br />
    @Html.Label("Yazar Hakkında")
    @Html.TextAreaFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-info">Yazarı Ekle</button>
</div>
}

